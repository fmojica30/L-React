{"ast":null,"code":"import * as actionTypes from \"./actions\";\nconst initialState = {\n  persons: []\n};\n\nconst personsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PERSON:\n      console.log(state);\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: \"Max\",\n        age: Math.floor(Math.random() * 40)\n      };\n      const newArr = [...state.persons];\n      newArr.push(newPerson);\n      return {\n        persons: newArr\n      };\n\n    case actionTypes.DELETE_PERSON:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default personsReducer;","map":{"version":3,"sources":["/Users/fernandomojica/git/github/learning/L-React/redux--assignment-2-problem/src/Store/reducer.js"],"names":["actionTypes","initialState","persons","personsReducer","state","action","type","ADD_PERSON","console","log","newPerson","id","Math","random","name","age","floor","newArr","push","DELETE_PERSON"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,UAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,YAAMM,SAAS,GAAG;AAChBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADY;AACG;AACnBC,QAAAA,IAAI,EAAE,KAFU;AAGhBC,QAAAA,GAAG,EAAEH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACC,MAAL,KAAgB,EAA3B;AAHW,OAAlB;AAKA,YAAMI,MAAM,GAAG,CAAC,GAAGb,KAAK,CAACF,OAAV,CAAf;AACAe,MAAAA,MAAM,CAACC,IAAP,CAAYR,SAAZ;AACA,aAAO;AACLR,QAAAA,OAAO,EAAEe;AADJ,OAAP;;AAIF,SAAKjB,WAAW,CAACmB,aAAjB;AACE,aAAOf,KAAP;;AAEF;AACE,aAAOA,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,cAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  persons: []\n};\n\nconst personsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PERSON:\n      console.log(state);\n      const newPerson = {\n        id: Math.random(), // not really unique but good enough here!\n        name: \"Max\",\n        age: Math.floor(Math.random() * 40)\n      };\n      const newArr = [...state.persons];\n      newArr.push(newPerson);\n      return {\n        persons: newArr\n      };\n\n    case actionTypes.DELETE_PERSON:\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default personsReducer;\n"]},"metadata":{},"sourceType":"module"}